#!/usr/bin/env ruby

require 'json'

# Generates a Muxed HLS output
def get_hls_output(width, height, bitrate)
    hls_output_template = File.read("hls-output.json")
    t = JSON.parse(hls_output_template)
    t['VideoDescription']['Width'] = width # 640
    t['VideoDescription']['Height'] = height # 360
    bitrate_kbps = bitrate / 1000
    t['VideoDescription']['VideoPreprocessors']['TimecodeBurnin']['Prefix'] = "hls-#{bitrate_kbps}kbps-#{height}p-" # 'hls-365kbps-360p-'
    t['VideoDescription']['CodecSettings']['H264Settings']['Bitrate'] = bitrate # 365000
    t['NameModifier'] = "-#{height}p-#{bitrate_kbps}k" # '-360p-365k'
    return t
end

# Generates a DASH Video output
def get_dash_video_output(width, height, bitrate)
    hls_output_template = File.read("dash-video-output.json")
    t = JSON.parse(hls_output_template)
    t['VideoDescription']['Width'] = width # 640
    t['VideoDescription']['Height'] = height # 360
    bitrate_kbps = bitrate / 1000
    t['VideoDescription']['VideoPreprocessors']['TimecodeBurnin']['Prefix'] = "dash-#{bitrate_kbps}kbps-#{height}p-" # 'dash-365kbps-360p-'
    t['VideoDescription']['CodecSettings']['H264Settings']['Bitrate'] = bitrate # 365000
    t['NameModifier'] = "-video-#{height}p-#{bitrate_kbps}k" # '-video-360p-365k'
    return t
end

# Generates a DASH Audio output
def get_dash_audio_output(bitrate)
    hls_output_template = File.read("dash-audio-output.json")
    t = JSON.parse(hls_output_template)
    t['AudioDescriptions'][0]['CodecSettings']['AacSettings']['Bitrate'] = bitrate # 128000
    bitrate_kbps = bitrate / 1000
    t['NameModifier'] = "-audio-#{bitrate_kbps}k" # '-audio-128k'
    return t
end

# Generates a job given an input, a name, and an output base
def get_job(input, short_name, output_base)

    hls_output = "#{output_base}/#{short_name}/mediaconvert/hls/#{short_name}"
    dash_output = "#{output_base}/#{short_name}/mediaconvert/dash/#{short_name}"

    job = JSON.parse(File.read("media-convert-no-outputs.json"))

    # Input
    job['Settings']['Inputs'][0]['FileInput'] = input

    # Output locations for HLS and DASH Output Groups
    job['Settings']['OutputGroups'][0]['OutputGroupSettings']['HlsGroupSettings']['Destination'] = hls_output
    job['Settings']['OutputGroups'][1]['OutputGroupSettings']['DashIsoGroupSettings']['Destination'] = dash_output

    # Add HLS Outputs (Muxed HLS V3)
    job['Settings']['OutputGroups'][0]['Outputs'].push(
        get_hls_output(416, 234, 145000),
        get_hls_output(640, 360, 365000),
        get_hls_output(768, 432, 730000),
        get_hls_output(768, 432, 1100000),
        get_hls_output(960, 540, 2000000),
        get_hls_output(1280, 720, 3000000),
        get_hls_output(1280, 720, 4500000),
        get_hls_output(1920, 1080, 6000000),
        get_hls_output(1920, 1080, 7800000))

    # Add DASH Video Outputs (Live Segment Template)
    job['Settings']['OutputGroups'][1]['Outputs'].push(
        get_dash_video_output(416, 234, 145000),
        get_dash_video_output(640, 360, 365000),
        get_dash_video_output(768, 432, 730000),
        get_dash_video_output(768, 432, 1100000),
        get_dash_video_output(960, 540, 2000000),
        get_dash_video_output(1280, 720, 3000000),
        get_dash_video_output(1280, 720, 4500000),
        get_dash_video_output(1920, 1080, 6000000),
        get_dash_video_output(1920, 1080, 7800000))

    # Add DASH Audio Outputs
    job['Settings']['OutputGroups'][1]['Outputs'].push(
        get_dash_audio_output(64000),
        get_dash_audio_output(128000),
        get_dash_audio_output(192000))

    job_json = JSON.generate(job).gsub!('"', '\"') # Escape quotes in JSON in the ugliest way possible. Probably breaks on some more complex use cases.
    return job_json
end

# Input
input_file = 's3://phils-players-video/inputs/big_buck_bunny_1080p_h264.mov'

# Short Name (Included in the output path, be conscise here)
short_name = 'bbb'

# The Output location
output_base = 's3://phils-players-video/outputs' # No trailing / pls

# Generate the job
job_json = get_job(input_file, short_name, output_base)

# Run Job
result = `aws --endpoint-url=https://n0stnx2va.mediaconvert.us-east-1.amazonaws.com mediaconvert create-job --cli-input-json "#{job_json}"`

# Check if it worked, and give backk the ID.
if $?.success?
    puts "Created Job ID: " + JSON.parse(result)['Job']['Id']
else
    puts "Failed to create job :( "
end